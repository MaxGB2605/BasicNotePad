// Generated by view binder compiler. Do not edit!
package com.example.basicnotepad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.basicnotepad.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChecklistBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageButton backButton;

  @NonNull
  public final MaterialButton buttonAddItem;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final EditText editTextTitle;

  @NonNull
  public final RecyclerView recyclerViewChecklist;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final Button themeButton;

  private ActivityChecklistBinding(@NonNull LinearLayout rootView, @NonNull ImageButton backButton,
      @NonNull MaterialButton buttonAddItem, @NonNull Button clearButton,
      @NonNull EditText editTextTitle, @NonNull RecyclerView recyclerViewChecklist,
      @NonNull Button saveButton, @NonNull Button themeButton) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.buttonAddItem = buttonAddItem;
    this.clearButton = clearButton;
    this.editTextTitle = editTextTitle;
    this.recyclerViewChecklist = recyclerViewChecklist;
    this.saveButton = saveButton;
    this.themeButton = themeButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChecklistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChecklistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_checklist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChecklistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageButton backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.buttonAddItem;
      MaterialButton buttonAddItem = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddItem == null) {
        break missingId;
      }

      id = R.id.clearButton;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.editTextTitle;
      EditText editTextTitle = ViewBindings.findChildViewById(rootView, id);
      if (editTextTitle == null) {
        break missingId;
      }

      id = R.id.recyclerViewChecklist;
      RecyclerView recyclerViewChecklist = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChecklist == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.themeButton;
      Button themeButton = ViewBindings.findChildViewById(rootView, id);
      if (themeButton == null) {
        break missingId;
      }

      return new ActivityChecklistBinding((LinearLayout) rootView, backButton, buttonAddItem,
          clearButton, editTextTitle, recyclerViewChecklist, saveButton, themeButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
